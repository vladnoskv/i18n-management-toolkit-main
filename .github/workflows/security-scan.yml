name: Security Scan

on:
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch: # Allow manual trigger

jobs:
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run security audit
        id: audit
        run: |
          npm audit --audit-level=moderate --json > audit-results.json || true
          
          # Parse results
          if [ -f audit-results.json ]; then
            HIGH_COUNT=$(cat audit-results.json | jq '.metadata.vulnerabilities.high // 0' 2>/dev/null || echo "0")
            CRITICAL_COUNT=$(cat audit-results.json | jq '.metadata.vulnerabilities.critical // 0' 2>/dev/null || echo "0")
            MODERATE_COUNT=$(cat audit-results.json | jq '.metadata.vulnerabilities.moderate // 0' 2>/dev/null || echo "0")
            
            echo "HIGH_VULNS=$HIGH_COUNT" >> $GITHUB_ENV
            echo "CRITICAL_VULNS=$CRITICAL_COUNT" >> $GITHUB_ENV
            echo "MODERATE_VULNS=$MODERATE_COUNT" >> $GITHUB_ENV
            
            echo "Security Audit Results:"
            echo "- Critical: $CRITICAL_COUNT"
            echo "- High: $HIGH_COUNT"
            echo "- Moderate: $MODERATE_COUNT"
          else
            echo "No vulnerabilities found"
            echo "HIGH_VULNS=0" >> $GITHUB_ENV
            echo "CRITICAL_VULNS=0" >> $GITHUB_ENV
            echo "MODERATE_VULNS=0" >> $GITHUB_ENV
          fi
          
      - name: Check for outdated dependencies
        run: |
          npm outdated --json > outdated.json || true
          if [ -s outdated.json ]; then
            echo "ðŸ“¦ Outdated dependencies found:"
            cat outdated.json
          fi
          
      - name: Create security issue if needed
        if: env.CRITICAL_VULNS > 0 || env.HIGH_VULNS > 5
        uses: actions/github-script@v7
        with:
          script: |
            const title = `Security Alert: ${process.env.CRITICAL_VULNS} Critical, ${process.env.HIGH_VULNS} High Vulnerabilities`;
            const body = `
            ## Security Scan Results
            
            **Date**: ${new Date().toISOString()}
            
            **Vulnerabilities Found**:
            - Critical: ${process.env.CRITICAL_VULNS}
            - High: ${process.env.HIGH_VULNS}
            - Moderate: ${process.env.MODERATE_VULNS}
            
            **Required Actions**:
            1. Run \`npm audit fix\` to automatically fix compatible issues
            2. Review remaining vulnerabilities manually
            3. Update package.json with fixed versions
            4. Test thoroughly before deployment
            
            **Next Steps**:
            - [ ] Run \`npm audit fix\`
            - [ ] Review and test changes
            - [ ] Update documentation if needed
            - [ ] Create PR with security fixes
            
            **Scan Command**: \`npm audit --audit-level=moderate\`
            
            *This issue was automatically created by the security scan workflow.*
            `;
            
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['security', 'vulnerability', 'automated']
            });
            
      - name: Upload security results
        uses: actions/upload-artifact@v4
        with:
          name: security-scan-results
          path: |
            audit-results.json
            outdated.json
          retention-days: 30