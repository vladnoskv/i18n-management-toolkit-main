{
  "initializationTitle": "🚀 i18n Management Toolkit - Initialisation du projet",
  "sourceDirectoryLabel": "📁 Répertoire source : {dir}",
  "sourceLanguageLabel": "🌍 Langue source : {language}",
  "detectedI18nFrameworks": "🔍 Framework(s) i18n détecté(s) : {frameworks}",
  "existingDirectoriesFound": "📁 Répertoires de traduction existants trouvés :",
  "useExistingDirectoryPrompt": "Voulez-vous utiliser le répertoire existant ? (o/n)",
  "autoDetectedI18nDirectory": "📂 Répertoire i18n détecté automatiquement : {directory}",
  "initializingProject": "⚙️  Initialisation de la configuration du projet...",
  "languageSelectionTitle": "🌐 Configuration des langues",
  "createdSampleTranslationFile": "✅ Fichier de traduction d'exemple créé : {file}",
  "available": "Disponible",
  "defaultLanguages": "📝 Langues par défaut : {languages}",
  "enterLanguageCodes": "🎯 Entrez les codes de langue cible (séparés par des virgules, ex. de, es, fr, ru) :",
  "targetLanguages": "🌍 Langues cibles",
  "foundSourceFiles": "📄 Trouvé {count} fichiers source à analyser",
  "processingLanguage": "🔄 Traitement de la langue : {language}",
  "fileProcessingResult": "✅ Traité {file} : {translated}/{total} clés ({percentage}%)",
  "overallProgress": "📊 Progression globale : {translated}/{total} clés traitées ({percentage}%)",
  "initializationSummaryTitle": "📋 Résumé de l'initialisation",
  "languageSummary": "{icon} {name} ({code}) : {percentage}% complété",
  "languageFiles": "   📄 Fichiers : {count}",
  "languageKeys": "   🔤 Clés : {translated}/{total}",
  "languageMissing": "   ⚠️  Manquantes : {count}",
  "initializationCompletedSuccessfully": "🎉 Initialisation du projet terminée avec succès !",
  "nextStepsTitle": "🚀 Étapes suivantes",
  "nextStep1": "1. Examiner les fichiers de traduction générés dans votre répertoire locales/",
  "nextStep2": "2. Ajouter les traductions pour chaque langue cible",
  "nextStep3": "3. Exécuter 'npm run i18ntk' à nouveau pour valider les traductions",
  "detectedFrameworks": "✅ Framework(s) i18n détecté(s) : {frameworks}",
  "warnings.noPackageJson": "Aucun package.json trouvé. Impossible de détecter automatiquement le framework i18n.",
  "errors.packageJsonRead": "Erreur lors de la lecture de package.json : {error}",
  "errors.noFramework": "Aucun framework i18n détecté. Veuillez en installer un ou spécifier manuellement.",
  "suggestions.noFramework": "Aucun framework i18n détecté. Envisagez d'utiliser l'un des suivants :",
  "frameworks.react": "- React i18next (react-i18next)",
  "frameworks.vue": "- Vue i18n (vue-i18n)",
  "frameworks.i18next": "- i18next (i18next)",
  "frameworks.nuxt": "- Nuxt i18n (@nuxtjs/i18n)",
  "frameworks.svelte": "- Svelte i18n (svelte-i18n)",
  "continueWithoutI18nPrompt": "Aucun framework i18n détecté. Voulez-vous continuer sans ? (o/N) : ",
  "detectedI18nFramework": "Framework i18n détecté : {frameworks}",
  "existingDirectoryItem": "  {index}. {location}",
  "usingExistingStructure": "Utilisation de la structure existante : {dir}",
  "creatingSourceDirectory": "Création du répertoire source : {dir}",
  "creatingSourceLanguageDirectory": "Création du répertoire de langue source : {dir}",
  "errors": {
    "sourceDirectoryNotFound": "Répertoire source introuvable : {dir}",
    "sourceLanguageDirectoryNotFound": "Répertoire de langue source introuvable : {dir}",
    "noJsonFilesInSourceDirectory": "Aucun fichier JSON trouvé dans le répertoire source : {dir}",
    "invalidFilePathDetected": "Chemin de fichier invalide détecté",
    "initializationFailed": "Échec de l'initialisation : {error}"
  },
  "processingFile": "Traitement de {file} pour {language}...",
  "fileAlreadyExistsMerging": "Le fichier {file} existe déjà. Fusion des nouvelles clés.",
  "createdNewFile": "Nouveau fichier créé : {file}",
  "updatedFile": "Fichier mis à jour : {file}",
  "skippingExcludedFile": "Ignoré {file} pour {language} car il est exclu."
}
