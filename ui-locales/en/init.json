
{
  "initializationTitle": "🚀 i18n Management Toolkit - Project Initialization",
  "sourceDirectoryLabel": "📁 Source Directory: {dir}",
  "sourceLanguageLabel": "🌍 Source Language: {language}",
  "detectedI18nFrameworks": "🔍 Detected i18n framework(s): {frameworks}",
  "existingDirectoriesFound": "📁 Existing translation directories found:",
  "useExistingDirectoryPrompt": "Do you want to use the existing directory? (y/n)",
  "autoDetectedI18nDirectory": "📂 Auto-detected i18n directory: {directory}",
  "initializingProject": "⚙️  Initializing project configuration...",
  "createdSampleTranslationFile": "✅ Created sample translation file: {file}",
  "languageSelectionTitle": "🌐 Language Configuration",
  "available": "Available",
  "defaultLanguages": "📝 Default languages: {languages}",
  "enterLanguageCodes": "🎯 Enter target language codes (comma-separated, e.g. de, es, fr, ru):",
  "targetLanguages": "🌍 Target Languages",
  "foundSourceFiles": "📄 Found {count} source files to analyze",
  "processingLanguage": "🔄 Processing language: {language}",
  "fileProcessingResult": "✅ Processed {file}: {translated}/{total} keys ({percentage}%)",
  "overallProgress": "📊 Overall Progress: {translated}/{total} keys processed ({percentage}%)",
  "initializationSummaryTitle": "📋 Initialization Summary",
  "languageSummary": "{icon} {name} ({code}): {percentage}% complete",
  "languageFiles": "   📄 Files: {count}",
  "languageKeys": "   🔤 Keys: {translated}/{total}",
  "languageMissing": "   ⚠️  Missing: {count}",
  "initializationCompletedSuccessfully": "🎉 Project initialization completed successfully!",
  "nextStepsTitle": "🚀 Next Steps",
  "nextStep1": "1. Review the generated translation files in your locales/ directory",
  "nextStep2": "2. Add translations for each target language",
  "nextStep3": "3. Run 'npm run i18ntk' again to validate translations",
  "detectedFrameworks": "✅ Detected i18n framework(s): {frameworks}",
  "warnings.noPackageJson": "No package.json found. Cannot auto-detect i18n framework.",
  "errors.packageJsonRead": "Error reading package.json: {error}",
  "errors.noFramework": "No i18n framework detected. Please install one or specify manually.",
  "suggestions.noFramework": "No i18n framework detected. Consider using one of the following:",
  "frameworks.react": "- React i18next (react-i18next)",
  "frameworks.vue": "- Vue i18n (vue-i18n)",
  "frameworks.i18next": "- i18next (i18next)",
  "frameworks.nuxt": "- Nuxt i18n (@nuxtjs/i18n)",
  "frameworks.svelte": "- Svelte i18n (svelte-i18n)",
  "continueWithoutI18nPrompt": "No i18n framework detected. Do you want to continue without one? (y/N): ",
  "detectedI18nFramework": "Detected i18n framework: {frameworks}",
  "existingDirectoryItem": "  {index}. {location}",
  "usingExistingStructure": "Using existing structure: {dir}",
  "creatingSourceDirectory": "Creating source directory: {dir}",
  "creatingSourceLanguageDirectory": "Creating source language directory: {dir}",
  "errors": {
    "sourceDirectoryNotFound": "Source directory not found: {dir}",
    "sourceLanguageDirectoryNotFound": "Source language directory not found: {dir}",
    "noJsonFilesInSourceDirectory": "No JSON files found in source directory: {dir}",
    "invalidFilePathDetected": "Invalid file path detected",
    "initializationFailed": "Initialization failed: {error}"
  },
  "processingFile": "Processing {file} for {language}...",
  "fileAlreadyExistsMerging": "File {file} already exists. Merging new keys.",
  "createdNewFile": "Created new file: {file}",
  "updatedFile": "Updated file: {file}",
  "skippingExcludedFile": "Skipping {file} for {language} as it's excluded."
}